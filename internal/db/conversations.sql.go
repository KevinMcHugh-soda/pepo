// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: conversations.sql

package db

import (
	"context"
	"time"
)

const createConversation = `-- name: CreateConversation :one
INSERT INTO conversation (id, description, occurred_at)
VALUES (
    x2b($1),
    $2,
    $3
)
RETURNING conversation.id, conversation.description, conversation.occurred_at, conversation.created_at, conversation.updated_at
`

type CreateConversationParams struct {
	ID          string    `db:"id" json:"id"`
	Description string    `db:"description" json:"description"`
	OccurredAt  time.Time `db:"occurred_at" json:"occurred_at"`
}

type CreateConversationRow struct {
	Conversation Conversation `db:"conversation" json:"conversation"`
}

func (q *Queries) CreateConversation(ctx context.Context, arg CreateConversationParams) (CreateConversationRow, error) {
	row := q.db.QueryRowContext(ctx, createConversation, arg.ID, arg.Description, arg.OccurredAt)
	var i CreateConversationRow
	err := row.Scan(
		&i.Conversation.ID,
		&i.Conversation.Description,
		&i.Conversation.OccurredAt,
		&i.Conversation.CreatedAt,
		&i.Conversation.UpdatedAt,
	)
	return i, err
}
