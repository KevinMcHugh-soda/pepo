package templates

import "time"

type Person struct {
	ID        string    `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type PersonWithLastAction struct {
	ID           string     `json:"id"`
	Name         string     `json:"name"`
	CreatedAt    time.Time  `json:"created_at"`
	UpdatedAt    time.Time  `json:"updated_at"`
	LastActionAt *time.Time `json:"last_action_at,omitempty"`
}

type PersonWithLastActivity struct {
        ID                        string     `json:"id"`
        Name                      string     `json:"name"`
        CreatedAt                 time.Time  `json:"created_at"`
        UpdatedAt                 time.Time  `json:"updated_at"`
        LastActionDesc            string     `json:"last_action_desc,omitempty"`
        LastActionAt              *time.Time `json:"last_action_at,omitempty"`
        LastConversationDesc      string     `json:"last_conversation_desc,omitempty"`
        LastConversationAt        *time.Time `json:"last_conversation_at,omitempty"`
}

func (p PersonWithLastAction) HasRecentAction() bool {
	if p.LastActionAt == nil {
		return false
	}
	weekAgo := time.Now().AddDate(0, 0, -7)
	return p.LastActionAt.After(weekAgo)
}

func (p PersonWithLastAction) LastActionDisplay() string {
	if p.LastActionAt == nil {
		return "No actions recorded"
	}
	return p.LastActionAt.Format("Jan 2, 2006 at 3:04 PM")
}

templ PersonItem(person Person) {
	<div class="border-b pb-2 mb-2" id={ "person-" + person.ID }>
		<div class="flex justify-between items-center">
			<div>
				<a href={ "/api/v1/people/" + person.ID } class="font-medium text-blue-600 hover:text-blue-800 hover:underline">{ person.Name }</a>
			</div>
			<div class="space-x-2">
				<!-- Edit functionality to be implemented with consolidated API -->
				<button
					hx-delete={ "/api/v1/people/" + person.ID }
					hx-target={ "#person-" + person.ID }
					hx-swap="outerHTML"
					hx-confirm="Are you sure you want to delete this person?"
					class="text-red-500 hover:text-red-700 text-sm"
				>
					Delete
				</button>
			</div>
		</div>
		<div class="text-xs text-gray-400 mt-1">
			Created: { person.CreatedAt.Format("2006-01-02 15:04:05") } | Updated: { person.UpdatedAt.Format("2006-01-02 15:04:05") }
		</div>
	</div>
}

templ PersonWithLastActionItem(person PersonWithLastAction) {
	<div class="border-b pb-2 mb-2" id={ "person-" + person.ID }>
		<div class="flex justify-between items-center">
			<div>
				<a href={ "/api/v1/people/" + person.ID } class="font-medium text-blue-600 hover:text-blue-800 hover:underline">{ person.Name }</a>
			</div>
			<div class="space-x-2">
				<button
					hx-delete={ "/api/v1/people/" + person.ID }
					hx-target={ "#person-" + person.ID }
					hx-swap="outerHTML"
					hx-confirm="Are you sure you want to delete this person?"
					class="text-red-500 hover:text-red-700 text-sm"
				>
					Delete
				</button>
			</div>
		</div>
		<div class="text-xs mt-1">
			if person.HasRecentAction() {
				<span class="text-green-600 font-medium">Last action: { person.LastActionDisplay() }</span>
			} else {
				<span class="text-red-600 font-medium bg-red-50 px-2 py-1 rounded">{ person.LastActionDisplay() }</span>
			}
		</div>
	</div>
}

templ PersonList(persons []Person) {
	if len(persons) == 0 {
		<div class="text-gray-500 text-center py-4">No people found. Add someone above!</div>
	} else {
		for _, person := range persons {
			@PersonItem(person)
		}
	}
}

templ PersonWithLastActionList(persons []PersonWithLastAction) {
	if len(persons) == 0 {
		<div class="text-gray-500 text-center py-4">No people found. Add someone above!</div>
	} else {
		for _, person := range persons {
			@PersonWithLastActionItem(person)
		}
	}
}

templ PersonWithLastActivityRow(person PersonWithLastActivity) {
        <tr id={ "person-" + person.ID } class="border-b">
                <td class="px-4 py-2">
                        <a href={ "/api/v1/people/" + person.ID } class="text-blue-600 hover:underline">{ person.Name }</a>
                </td>
                <td class="px-4 py-2">
                        if person.LastActionDesc != "" {
                                <div>{ person.LastActionDesc }</div>
                                if person.LastActionAt != nil {
                                        <div class="text-xs text-gray-500">{ person.LastActionAt.Format("Jan 2, 2006 3:04 PM") }</div>
                                }
                        } else {
                                <span class="text-gray-500">No actions</span>
                        }
                </td>
                <td class="px-4 py-2">
                        if person.LastConversationDesc != "" {
                                <div>{ person.LastConversationDesc }</div>
                                if person.LastConversationAt != nil {
                                        <div class="text-xs text-gray-500">{ person.LastConversationAt.Format("Jan 2, 2006 3:04 PM") }</div>
                                }
                        } else {
                                <span class="text-gray-500">No conversations</span>
                        }
                </td>
        </tr>
}

templ PersonWithLastActivityTable(persons []PersonWithLastActivity) {
        <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                                <tr>
                                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Person</th>
                                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Action</th>
                                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Conversation</th>
                                </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                                if len(persons) == 0 {
                                        <tr>
                                                <td colspan="3" class="px-4 py-4 text-center text-gray-500">No people found.</td>
                                        </tr>
                                } else {
                                        for _, person := range persons {
                                                @PersonWithLastActivityRow(person)
                                        }
                                }
                        </tbody>
                </table>
        </div>
}

templ PersonSelectOptions(persons []Person) {
	<option value="">Select a person...</option>
	for _, person := range persons {
		<option value={ person.ID }>{ person.Name }</option>
	}
}

templ PersonSelectError() {
	<option value="">Error loading people</option>
}

templ PersonSelectLoading() {
	<option value="">Loading people...</option>
}

templ PersonDetail(person Person, timeline []TimelineItem) {
        @Layout("Person Details") {
		        @LockWrapper() {
			<!-- Header with back button -->
                        <div class="mb-6">
                                <a href="/" class="text-blue-600 hover:text-blue-800 flex items-center mb-4">
                                        ‚Üê Back to People List
                                </a>
                                <div class="bg-white rounded-lg shadow p-6">
                                        <h1 class="text-2xl font-bold text-gray-900 mb-2">{ person.Name }</h1>
                                </div>
                        </div>
                        <div class="mb-6 flex space-x-4">
                                <a href={ "/conversations/new?person_id=" + person.ID } class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded">Add Conversation</a>
                                <a href={ "/actions/new?person_id=" + person.ID } class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded">Add Action</a>
                        </div>
                        <!-- Timeline section -->
                        <div class="bg-white rounded-lg shadow p-6">
                                <div class="flex justify-between items-center mb-4">
                                        <h2 class="text-xl font-semibold text-gray-900">Timeline ({ len(timeline) })</h2>
                                        <a href="/" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded text-sm">
                                                Back to Home
                                        </a>
                                </div>
                                <div id="timeline-list" class="space-y-4">
                                        @TimelineList(timeline)
                                </div>
                        </div>
			<!-- JavaScript to handle form interactions -->
			<script>
                                document.addEventListener('htmx:afterRequest', function(event) {
                                        if (event.detail.successful && event.target.closest('form')) {
                                                const actionUrl = event.target.closest('form').action;
                                                if (actionUrl.includes('/actions') || actionUrl.includes('/conversations')) {
                                                        const noMsg = document.getElementById('no-timeline-message');
                                                        if (noMsg) {
                                                                noMsg.remove();
                                                        }
                                                }
                                        }
                                });
                        </script>
                }
	}
}
