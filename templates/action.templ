package templates

import "time"

type Action struct {
	ID          string    `json:"id"`
	PersonID    string    `json:"person_id"`
	OccurredAt  time.Time `json:"occurred_at"`
	Description string    `json:"description"`
	References  string    `json:"references,omitempty"`
	Valence     string    `json:"valence"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

func getValenceColor(valence string) string {
	if valence == "positive" {
		return "text-green-600"
	}
	return "text-red-600"
}

func getBgColorForValence(valence string) string {
	if valence == "positive" {
		return "bg-green-500"
	}
	return "bg-red-500"
}

templ ActionItem(action Action) {
	<div class="border-b pb-3 mb-3" id={ "action-" + action.ID }>
		<div class="flex justify-between items-start">
			<div class="flex-1">
				<div class="flex items-center gap-2 mb-1">
					<span class={ "inline-block w-2 h-2 rounded-full " + getBgColorForValence(action.Valence) }></span>
					<span class={ "font-medium capitalize " + getValenceColor(action.Valence) }>{ action.Valence }</span>
					<span class="text-xs text-gray-500">Person ID: { action.PersonID }</span>
				</div>
				<p class="text-gray-800 mb-1">{ action.Description }</p>
				if action.References != "" {
					<div class="text-xs text-blue-600 mt-1">
						<a href={ templ.URL(action.References) } target="_blank" class="underline">Reference</a>
					</div>
				}
				<div class="text-xs text-gray-400">
					Occurred: { action.OccurredAt.Format("2006-01-02 15:04") } | Created: { action.CreatedAt.Format("2006-01-02 15:04") }
				</div>
			</div>
			<div class="space-x-2 ml-4">
				<button
					hx-delete={ "/forms/actions/delete/" + action.ID }
					hx-target={ "#action-" + action.ID }
					hx-swap="outerHTML"
					hx-confirm="Are you sure you want to delete this action?"
					class="text-red-500 hover:text-red-700 text-sm"
				>
					Delete
				</button>
			</div>
		</div>
	</div>
}

templ ActionList(actions []Action) {
	if len(actions) == 0 {
		<div class="text-gray-500 text-center py-4">No actions found. Add some above!</div>
	} else {
		for _, action := range actions {
			@ActionItem(action)
		}
	}
}

templ ActionError(message string) {
	<div class="text-red-500">{ message }</div>
}

templ ActionLoading() {
	<div class="text-gray-500">Loading...</div>
}
